devices: 1
accelerator: gpu
distributed_backend: ddp
seed: 0
debug: false
fast_dev_run: false
max_epochs: 100

image_net_path: ???
cifar10_path: ???
simple_shapes_path: ???

visual_dataset: "shapes"

img_size: 32

n_validation_examples: 32

slurm:
  slurm:
    "-N": 1
    "--gres": "gpu:${devices}"
    "--time": "12:00:00"
    "--mem": 5000

vae:
  batch_size: 128
  data_augmentation: true

  beta: 0.5
  z_size: 12
  ae_size: 512
  type: "optimal_sigma"

  n_FID_samples: 1000

  optim:
    lr: 1e-4
    weight_decay: 3e-5

  scheduler:
    step: 20
    gamma: 0.5

lm:
  z_size: 12

  batch_size: 128
  n_validation_examples: 32
  optim:
    lr: 1e-4
    weight_decay: 3e-5
  scheduler:
    step: 10
    gamma: 0.1

global_workspace:
  monitor_grad_norms: false  # if true, training is a bit slower.
  batch_size: 128
  data_augmentation: false
  selected_domains: ???
  sync_uses_whole_dataset: false

  use_pre_saved: false
  load_pre_saved_latents: null

  split_ood: false
  bert_path: "bert-base-uncased"

  z_size: 20
  hidden_size: 512
  n_layers:
    encoder: 0
    decoder: 0
    decoder_head: 0
  prop_labelled_images: 1.  # of the allowed classes to be labelled.
  classes_labelled_images: null  # null is all classes
  vae_checkpoint: ???
  lm_checkpoint: ???
  vae_mmd_loss_coef: 0.
  vae_kl_loss_coef: 0.

  optim:
    lr:
      encoders: 1e-4
      decoders: 1e-4
      supervised_multiplier: 1.
      unsupervised_multiplier: 1.
    weight_decay: 3e-5

  scheduler:
    # "fixed"/"adaptive".
    # - Fixed will use the following values.
    # - Adaptive will change the values based on the prop_labelled_image setting.
    #   The given values are the one used if prop_labelled_images is set to 1.
    mode: fixed
    interval: epoch
    step: 20
    gamma: 0.5

losses:
  coefs:
    demi_cycles: 0.
    cycles: 0.
    supervision: 1.
    cosine: 0.
    contrastive: 1.3

gensim_model_path: ???
word_embeddings: null

dataloader:
  num_workers: 0

loggers:
  - logger: TensorBoardLogger
    save_images: true
    args:
      save_dir: "../logs/tensor_board_logger"
#  - logger: CSVLogger
#    save_images: true
#    args:
#      save_dir: "../logs/csv_logger"
#  - logger: NeptuneLogger
#    save_images: true
#    args:
#      project: null
#      api_key: null
#      mode: async
#      run: null


checkpoints_dir: ???
resume_from_checkpoint: null
_code_version: master
